<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 激活@Controller模式 -->

	<context:annotation-config />
	<context:property-placeholder location="classpath:redis.properties" />

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- <property name="maxActive" value="32"></property> -->
		<!-- <property name="maxIdle" value="6"></property> -->
		<!-- <property name="maxWait" value="15000"></property> -->
		<property name="minEvictableIdleTimeMillis" value="300000"></property>
		<property name="numTestsPerEvictionRun" value="3"></property>
		<property name="timeBetweenEvictionRunsMillis" value="60000"></property>
		<!-- <property name="whenExhaustedAction" value="1"></property> -->
	</bean>
	<!-- <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
		destroy-method="destroy"> <property name="poolConfig" ref="jedisPoolConfig"></property> 
		<property name="hostName" value="127.0.0.1"></property> <property name="port" 
		value="6379"></property> <property name="password" value=""></property> <property 
		name="timeout" value="15000"></property> <property name="usePool" value="true"></property> 
		</bean> -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<property name="poolConfig" ref="jedisPoolConfig"></property>
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="password" value="${redis.pass}"></property>
		<property name="timeout" value="${redis.timeout}"></property>
		<property name="usePool" value="${redis.usePool}"></property>
	</bean>

	<bean name="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
	<bean name="jdkSerializationRedisSerializer"
		class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
	<!-- 普通数据 -->
	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="stringRedisSerializer" />
		<property name="stringSerializer" ref="stringRedisSerializer" />
		<property name="hashValueSerializer" ref="stringRedisSerializer"></property>
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
		<!-- <property name="hashValueSerializer" ref="jdkSerializationRedisSerializer"/> -->
	</bean>
	<!-- 读取保存非普通数据类型 -->
	<bean id="jedisTemplate4Object" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
		<property name="defaultSerializer" ref="jdkSerializationRedisSerializer"></property>
		<property name="keySerializer" ref="jdkSerializationRedisSerializer" />
		<property name="valueSerializer" ref="jdkSerializationRedisSerializer" />
		<property name="stringSerializer" ref="jdkSerializationRedisSerializer" />
		<property name="hashValueSerializer" ref="jdkSerializationRedisSerializer"></property>
		<property name="hashKeySerializer" ref="jdkSerializationRedisSerializer" />
		<!-- <property name="hashValueSerializer" ref="jdkSerializationRedisSerializer"/> -->
	</bean>
	<!-- json序列化工厂 -->
	<bean id="jsonSerializer" class="org.carl.canal.util.JsonRedisSerializer" />
	<!-- json jedisTemplate -->
	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<!-- <context:component-scan base-package="org.train.redis.*" /> -->
	<!-- redis list 队列信息 -->
	<bean id="jedisQueue" class="org.carl.canal.redis.queue.RedisQueue"
		destroy-method="destroy">
		<property name="redisTemplate" ref="jedisTemplate4Object"></property>
		<property name="key" value="ranal.redis.queue"></property>
	</bean>
</beans> 